# -*- coding:utf-8 -*-

'''
    += 调用的是__iadd__方法，如果一个类没有实现这个方法，
呢么就会调用__add__方法。
    如果这个类实现了__iadd__方法，同时他是一个可变序列，调用这个方法，
他本身就会发生改变，如果没有__iadd__方法，会得到一个新的对象。
    总的来说，可变序列一般都实现了__iadd__方法，因此+=就是就地加法，
不可变序列根本不支持这个操作，对这个方法的实现也就无从谈起。
    +=所适用的感念也适用与*=,后者相应的是__imul__方法。
'''

l = [1,2,3]
print(id(l))
l *= 2
print(id(l))
t = (1,2,3)
print(id(t))
t *= 2
print(id(t))

'''
对于可变序列，进行*=操作，id并没有变化，而对于不可变序列，id改变了，说明创建了
一个新对象。
str是个例外，因为对字符串的+=操作太普遍了，所以在为str初始化内存的时候
程序为他流出了额外的可扩展空间，所以在对字符串操作的时候，不会涉及
复制原有字符串到新位置之类的操作。
'''